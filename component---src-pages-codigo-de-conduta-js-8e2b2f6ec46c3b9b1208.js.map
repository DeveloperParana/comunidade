{"version":3,"sources":["webpack:///./src/pages/codigo-de-conduta.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","CodigoConduta","a","createElement","title","id","href","target","rel","to","d","graphql","StaticQueryContext","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","data","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","Header","siteTitle","react_default","style","background","marginBottom","margin","maxWidth","padding","gatsby_browser_entry","color","textDecoration","Layout","Fragment","header","paddingTop","_755544856","node"],"mappings":"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","file":"component---src-pages-codigo-de-conduta-js-8e2b2f6ec46c3b9b1208.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\n\nconst CodigoConduta = () => (\n  <Layout>\n    <SEO title=\"Código de Conduta - DevParaná - Comunidade\" />\n    \n    <h1>Código de Conduta</h1>\n\n    <h2 id=\"versorpidatldr\">VERSÃO RÁPIDA (TL;DR)</h2>\n    \n    <p>O Dev Paraná é uma comunidade dedicada a oferecer um ambiente livre de assédio para todos, independentemente do sexo, identidade de gênero e expressão, idade, orientação sexual, deficiência, aparência física, tamanho corporal, cor de pele, etnia, religião (ou falta dela) ou escolhas de tecnologias.</p>\n    <p>Nós não toleramos o assédio aos participantes da comunidade, sob qualquer forma. </p>\n    <p>Linguagem e imagens sexuais não são apropriadas em nenhum espaço, incluindo palestras, workshops, festas, canais do Slack, discussões do Meetup e outras mídias on-line. Os participantes que violarem essas regras poderão ser expulsos e banidos do Slack e do Meetup do Dev Paraná. A punição pode ir desde a expulsão do membro, até ser banido de eventos futuros promovidos pelo Dev Paraná.</p>\n\n    <h2 id=\"versodetalhada\">VERSÃO DETALHADA</h2>\n    \n    <p>Assédio inclui comentários verbais ofensivos relacionados ao gênero, identidade de gênero e expressão, idade, orientação sexual, deficiência, aparência física, tamanho corporal, cor de pele, etnia, religião, escolhas de tecnologias, imagens sexuais em espaços públicos, intimidação deliberada, perseguição, stalking, fotografias ou filmagens constrangedoras, interrupção contínua das apresentações de idéias ou outros eventos, contato físico inadequado e atenção sexual indesejada.</p>\n    <p>Os membros que receberem uma solicitação para interromper qualquer comportamento de assédio devem fazê-lo imediatamente.</p>\n    <p>Caso seja assediado, perceba que alguém está sendo assediado ou tenha alguma dúvida, entre em contato com um membro da staff imediatamente.</p>\n    <p>Nós valorizamos a sua participação dentro da comunidade e queremos que aproveite o máximo possível, sinta-se a vontade e em segurança, e acima de tudo, respeitado.</p>\n    <p>Esperamos que os membros sigam estas regras em todos os canais virtuais ou físicos relacionais ao Dev Paraná.</p>\n    <p>Referências:</p>\n\n    <ul>\n        <li><a href=\"https://braziljs.org/coc/\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">https://braziljs.org/coc/</a></li>\n        <li><a href=\"http://confcodeofconduct.com/\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">http://confcodeofconduct.com/</a></li>\n    </ul>\n\n    <Link to=\"/\">Voltar para Home</Link>\n  </Layout>\n)\n\nexport default CodigoConduta\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: 'description',\n                content: metaDescription,\n              },\n              {\n                property: 'og:title',\n                content: title,\n              },\n              {\n                property: 'og:description',\n                content: metaDescription,\n              },\n              {\n                property: 'og:type',\n                content: 'website',\n              },\n              {\n                name: 'twitter:card',\n                content: 'summary',\n              },\n              {\n                name: 'twitter:creator',\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: 'twitter:title',\n                content: title,\n              },\n              {\n                name: 'twitter:description',\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: 'keywords',\n                      content: keywords.join(', '),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: 'en',\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nconst Header = ({ siteTitle }) => (\n  <div\n    style={{\n      background: '#15a04b',\n      marginBottom: '1.45rem',\n    }}\n  >\n    <div\n      style={{\n        margin: '0 auto',\n        maxWidth: 960,\n        padding: '1.45rem 1.0875rem',\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: 'white',\n            textDecoration: 'none',\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </div>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: '',\n}\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from './header'\nimport './layout.css'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: '0 auto',\n            maxWidth: 960,\n            padding: '0px 1.0875rem 1.45rem',\n            paddingTop: 0,\n          }}\n        >\n          {children}\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}